name: 🛠️ Build & Deploy — Shadow Scripts

on:
  push:
    branches: [main]
    paths:
      - 'src-scripts/**'
      - 'scripts/**'
      - 'configs/master-rules.yaml'
      - 'scripts/manifest-loader.html'
      - 'package.json'
      - 'pnpm-lock.yaml'
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force full rebuild (ignore cache)'
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pages: write
  id-token: write

env:
  DNS_SERVER: "1.1.1.1"
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  CACHE_KEY_PREFIX: shadow-scripts-v1
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      sha_short: ${{ steps.sha.outputs.sha_short }}
      cache_hit: ${{ steps.build-cache.outputs.cache-hit }}
    
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 🔑 Generate metadata
        id: sha
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          echo "date_tag=$(date +'%Y%m%d')" >> "$GITHUB_OUTPUT"

      - name: 🏗️ Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.7.0
          run_install: false

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: 🔍 Restore build cache
        id: build-cache
        if: ${{ !inputs.force_rebuild }}
        uses: actions/cache@v4
        with:
          path: apps/loader/public
          key: ${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('src-scripts/**', 'scripts/**', 'configs/master-rules.yaml', 'scripts/manifest-loader.html') }}-${{ steps.sha.outputs.date_tag }}
          restore-keys: |
            ${{ env.CACHE_KEY_PREFIX }}-

      - name: 🔨 Obfuscate & Build
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' || inputs.force_rebuild }}
        run: |
          chmod +x scripts/build-all.sh
          ./scripts/build-all.sh
          cp scripts/manifest-loader.html apps/loader/public/index.html

      - name: 🧪 Validate artifacts
        run: |
          [ -d apps/loader/public ] || { echo "❌ public dir missing"; exit 1; }

          EMPTY=$(find apps/loader/public -type f \( -name '*.js' -o -name '*.json' \) -empty || true)
          if [ -n "$EMPTY" ]; then
            echo "❌ Empty file(s):"
            echo "$EMPTY"
            exit 1
          fi

          echo "Last updated: $(date -u)" > apps/loader/public/build-info.txt
          echo "Commit: ${{ steps.sha.outputs.sha_short }}" >> apps/loader/public/build-info.txt

      - name: 📝 Auto-commit artifacts
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' || inputs.force_rebuild }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add .
          git diff --cached --quiet || {
            git commit -m "🤖 Build artifacts [skip ci]" -m "Build: ${{ steps.sha.outputs.sha_short }}"
            git pull --rebase origin main || true
            git push origin main || true
          }

      - name: 📦 Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/loader/public
          retention-days: 7

  deploy:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 📢 Discord Notify
        if: ${{ success() && env.DISCORD_WEBHOOK != '' }}
        run: |
          CACHE_STATUS="${{ needs.build.outputs.cache_hit == 'true' && '(cached)' || '(rebuilt)' }}"
          curl -H "Content-Type: application/json" -X POST \
            -d "{\"content\":\"✅ Shadow Scripts ${CACHE_STATUS} build ${{ needs.build.outputs.sha_short }} deployed: ${{ steps.deployment.outputs.page_url }}\"}" \
            "$DISCORD_WEBHOOK" || true
