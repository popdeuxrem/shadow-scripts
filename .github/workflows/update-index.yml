name: "üîÅ Full Stealth Loader ¬∑ Obfuscate ‚Üí Generate ‚Üí Deploy ‚Üí Notify"

on:
  push:
    paths:
      - "src-scripts/**"
      - "scripts/**"
      - "configs/master-rules.yaml"
      - "scripts/manifest-loader.html"
      - ".github/workflows/update-index.yml"
      - "package.json"
      - "pnpm-lock.yaml"
  schedule:
    - cron: "0 0 * * 0"   # Weekly on Sunday at midnight (reduced frequency)
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Skip cache and force rebuild'
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pages: write
  id-token: write

env:
  DNS_SERVER: "1.1.1.1"
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  NODE_ENV: production
  PNPM_CACHE_FOLDER: .pnpm-store

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      sha_short: ${{ steps.sha.outputs.sha_short }}
      cache_hit: ${{ steps.restore-build.outputs.cache-hit }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Generate build metadata
        id: sha
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "timestamp=$(date -u +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_OUTPUT

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.7.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20  # Using Node.js 20 for better stability
          cache: 'pnpm'

      # Generate cache key without using hashFiles function
      - name: Generate cache key
        id: cache-key
        run: |
          if [ -d "src-scripts" ] || [ -d "scripts" ] || [ -f "configs/master-rules.yaml" ]; then
            HASH=$(find src-scripts scripts configs -type f -not -path "*/node_modules/*" -not -path "*/dist/*" 2>/dev/null | sort | xargs sha256sum 2>/dev/null | sha256sum | cut -d' ' -f1)
          else
            HASH=$(date +%s)
          fi
          echo "hash=$HASH" >> $GITHUB_OUTPUT

      - name: Restore build cache
        id: restore-build
        if: ${{ !inputs.force_rebuild }}
        uses: actions/cache@v4
        with:
          path: apps/loader/public
          key: stealth-${{ steps.cache-key.outputs.hash }}
          restore-keys: |
            stealth-

      - name: Install dependencies
        run: |
          # Install normal dependencies
          pnpm install --frozen-lockfile
          
          # Install additional dependencies with workspace flag
          pnpm add -w -D js-yaml javascript-obfuscator

      - name: Build artifacts
        if: ${{ steps.restore-build.outputs.cache-hit != 'true' || inputs.force_rebuild }}
        run: |
          chmod +x scripts/build-all.sh
          ./scripts/build-all.sh

      - name: Add build metadata
        run: |
          mkdir -p apps/loader/public
          echo "Build: ${{ steps.sha.outputs.sha_short }}" > apps/loader/public/version.txt
          echo "Date: ${{ steps.sha.outputs.timestamp }}" >> apps/loader/public/version.txt
          echo "Ref: ${{ github.ref_name }}" >> apps/loader/public/version.txt

      - name: Validate artifacts
        run: |
          [ -d apps/loader/public ] || { echo "‚ùå public directory missing"; exit 1; }
          
          # Check if any empty JS or JSON files exist, but handle case when none are found
          EMPTY_FILES=$(find apps/loader/public -type f \( -name '*.js' -o -name '*.json' \) -empty 2>/dev/null || echo "")
          if [ -n "$EMPTY_FILES" ]; then
            echo "‚ùå Empty artifact(s) detected:"
            echo "$EMPTY_FILES"
            exit 1
          else
            echo "‚úÖ All artifacts validated"
          fi

      - name: Commit & push changes
        if: ${{ steps.restore-build.outputs.cache-hit != 'true' || inputs.force_rebuild }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "ü§ñ Auto-update artifacts [skip ci]" -m "build:${{ steps.sha.outputs.sha_short }}"
            git pull --rebase
            git push || echo "Push failed, continuing with deployment"
          else
            echo "No changes to commit"
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/loader/public
          retention-days: 7

  deploy:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 3
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

      - name: Send notification
        if: ${{ success() && env.DISCORD_WEBHOOK != '' }}
        run: |
          CACHE_STATUS="${{ needs.build.outputs.cache_hit == 'true' && '(cached)' || '(rebuilt)' }}"
          
          curl -H "Content-Type: application/json" \
               -d "{\"content\":\"‚úÖ Stealth-Loader ${CACHE_STATUS} ${{ needs.build.outputs.sha_short }} deployed ‚Üí ${{ steps.deploy.outputs.page_url }}\"}" \
               "$DISCORD_WEBHOOK" || true
