# A more descriptive name for the workflow
name: CI/CD - Build and Deploy to GitHub Pages

on:
  # Triggers the workflow on pushes to the main branch
  push:
    branches: [main]
  # Allows the workflow to be run manually from the Actions tab
  workflow_dispatch:

jobs:
  # This job handles the build process
  build:
    name: Build
    runs-on: ubuntu-latest
    # Define outputs that can be used by other jobs
    outputs:
      # The short commit hash will be passed to the deploy job
      commit_hash: ${{ steps.vars.outputs.sha_short }}

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Using a modern LTS version of Node.js
          cache: 'pnpm'

      - name: 📦 Install dependencies
        # Using --no-frozen-lockfile to prevent errors if pnpm-lock.yaml is missing.
        # For reproducible builds, it's recommended to commit pnpm-lock.yaml
        # and use 'pnpm install --frozen-lockfile' instead.
        run: pnpm install --no-frozen-lockfile

      - name: 📌 Set short git commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: 🔨 Run build script
        # Pass the commit hash as an environment variable for the build script
        env:
          GIT_COMMIT: ${{ steps.vars.outputs.sha_short }}
        run: |
          # Ensure the build script is executable
          chmod +x ./scripts/build-all.sh
          ./scripts/build-all.sh

      - name: 📤 Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages-artifact
          # The directory that will be deployed to GitHub Pages
          path: ./apps/loader/public

  # This job handles the deployment process and depends on the build job
  deploy:
    name: Deploy to GitHub Pages
    # The deployment will only run if the build job completes successfully
    needs: build
    runs-on: ubuntu-latest

    # Set permissions required for deploying to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    # Configure the deployment environment for GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: 📥 Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages-artifact

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
