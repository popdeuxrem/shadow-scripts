name: 🛠️ Build & Deploy — Shadow Scripts

on:
  push:
    branches: [main]
    paths:
      - 'src-scripts/**'
      - 'scripts/**'
      - 'configs/master-rules.yaml'
      - 'scripts/manifest-loader.html'
      - 'package.json'
      - 'pnpm-lock.yaml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write          # allow git push
  pages: write             # allow Pages deploy
  id-token: write          # required by deploy-pages

env:
  # fallback DNS for mobileconfig generator
  DNS_SERVER: "1.1.1.1"
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

#######################################################################
# 1️⃣  BUILD job – runs the full mono-repo build and uploads the Pages #
#######################################################################
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.sha.outputs.sha_short }}
    steps:
      # ─────────────────────────  checkout  ──────────────────────────
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔑 Short SHA
        id: sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      # ─────────────────────────  tool setup  ────────────────────────
      - name: 🏗️ Set up pnpm
        uses: pnpm/action-setup@v4
        with: { version: 9.7.0 }

      - name: 🛠️ Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: 📦 Install deps
        run: pnpm install --frozen-lockfile

      # ─────────────────────────  build  ─────────────────────────────
      - name: 🔨 Build (configs + obfuscation + manifest + loader)
        run: |
          chmod +x scripts/build-all.sh
          ./scripts/build-all.sh
          cp scripts/manifest-loader.html apps/loader/public/index.html

      # ─────────────────────────  validate  ──────────────────────────
      - name: 🧪 Validate outputs
        run: |
          [ -d apps/loader/public ] || { echo "❌ public dir missing"; exit 1; }
          find apps/loader/public -type f \( -name '*.js' -o -name '*.json' \) \
          | while read -r f; do [ -s "$f" ] || { echo "❌ Empty file: $f"; exit 1; }; done

      # ───────────────────  optional auto-commit  ───────────────────
      - name: 📝 Auto-commit artifacts (rebase-safe)
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --cached --quiet || {
            git commit -m "🤖 Build artifacts [skip ci]" -m "Build: ${{ steps.sha.outputs.sha_short }}"
            git pull --rebase origin main || true
            git push origin main || true
          }

      # ─────────────────────  upload pages artifact  ─────────────────
      - name: 📦 Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/loader/public      # ← folder that becomes your site

#######################################################################
# 2️⃣  DEPLOY job – uses the new Pages action (needs build)           #
#######################################################################
  deploy:
    needs: build
    environment:
      name: github-pages
      url:  ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4    # official action  📄 docs →  [oai_citation:0‡GitHub](https://github.com/actions/deploy-pages?utm_source=chatgpt.com)

#######################################################################
# 3️⃣  (Optional) Discord notification                               #
#######################################################################
      - name: 📢 Discord notify
        if: success() && env.DISCORD_WEBHOOK != ''
        run: |
          curl -H "Content-Type: application/json" -X POST \
            -d "{\"content\":\"✅ Shadow Scripts build ${{ needs.build.outputs.sha_short }} deployed: ${{ steps.deployment.outputs.page_url }}\"}" \
            "$DISCORD_WEBHOOK" || true
